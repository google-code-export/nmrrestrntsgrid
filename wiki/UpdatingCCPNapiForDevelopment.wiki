#summary How to update the CCPN and recoord code.
#labels Featured

= Introduction =

The installation on tang is now maintained by Jurgen, Chris, and Jundong. $WS points to the workspace. The projects are named ccpn and recoord.

= How to =

  * complete refresh of the recoord archive
{{{
    cd $WS
    cvs -z3 -d :pserver:jurgen_bmrb.wisc.edu@cvsebi.ebi.ac.uk:/ebi/cvs/recoord checkout recoord    
    # or just update:
    cd $WS
    cvs update recoord
    There is a problem with using absolute paths in the cvs update command.
}}}
Then, also localize with a file: /big/docr/workspace/recoord/python/msd/adatah/localConstants.py containing:
{{{
import os

# Contain dirs: data with dirs: allChemComps, archives, and recoord 
localTopDir = "/Users/jd/ccpn_tmp"
dataDir             = os.path.join(localTopDir,'data')
archivesDataDir     = os.path.join(dataDir,'archives')
archivesCcpnDataDir = os.path.join(dataDir,'archivesCcpn')
pythonCommand       = "python"
numCpu              = 1
# note that this is no longer needed if JFD is correct
#allChemCompDataPath = os.path.join(dataDir,'allChemComps')
 
print "Read msd.adatah.localConstants.py version 0.0.2"
}}}


  * Complete refresh of the ccpn archive
{{{
    # Goto the workspace
    cd $WS
    # Remove any previous install if needed.
    \rm -r ccpn
    # Only login once this info will be saved. Need to have developer access otherwise syncing is delayed a lot. How to do this is described best at the sf.net site. You need to setup shared keys.
    # Check out stable version:
    #cvs -z3 -d:pserver:anonymous@ccpn.cvs.sourceforge.net:/cvsroot/ccpn checkout -r stable ccpn
    #cvs -z3 -d:ext:jurgenfd@ccpn.cvs.sourceforge.net:/cvsroot/ccpn co -r stable -P ccpn
    # on docr@grunt, we are becoming non-person-centric, so we now have the user, bmrb
    cvs -z3 -d:ext:bmrb@ccpn.cvs.sourceforge.net:/cvsroot/ccpn co -r stable -P ccpn

    Then link in the chem comps:
    cd ccpn
    ln -s /big/docr/ccpn-chemcomp .

    # If you only need to update you can do from any dir:
    cvs -z3 -d:ext:jurgenfd@ccpn.cvs.sourceforge.net:/cvsroot/ccpn update -r stable $WS/ccpn
}}}
    
  * regenerate the ccpn data model in/by python:
{{{
    python -u $CCPNMR_TOP_DIR/python/memops/scripts_v2/makePython.py
}}}

    
  * get info from NMR Restraints Grid for running FC on for example 1brv.
{{{
    set x = 1brv
    #python -u $WS/recoordD/python/recoord2/msd/getAllInfo.py $x -force 
    # not using recoordD anymore
    python -u $WS/recoord/python/recoord2/msd/getAllInfo.py $x -force 
    This will put the data in: .../data/archives
        bmrb/nmrRestrGrid/1brv and
        pdb
}}}
        
  * run FC:
{{{
    #python -u $WS/recoordD/python/recoord2/msd/linkNmrStarData.py $x -noGui -force -raise
    python -u $WS/recoord/python/recoord2/msd/linkNmrStarData.py $x -noGui -force -raise
}}}
    This will put data in: .../data/recoord/$x
    
  * run FC on the above for export to CYANA.
{{{
    #python -u $WS/recoordD/python/recoord2/bmrb/export2Cyana.py $x -noGui -force -raise
    python -u $WS/recoord/python/recoord2/bmrb/export2Cyana.py $x -noGui -force -raise
}}}
    This will put data in: .../data/recoord/$x
    
  * document:
{{{
python $CCPNMR_TOP_DIR/python/ccpnmr/format/help/createLinkResonancesParametersDoc.py
python $CCPNMR_TOP_DIR/python/ccpnmr/format/help/createFormatConverterParametersDoc.py
}}}